<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	xmlns:context="http://www.springframework.org/schema/context">

	<context:annotation-config/>
	<context:component-scan base-package="org.lucky.spring.dataSupport.example23addingSpringAndDataSource.dao" />
	
	<!-- DriverManagerDataSource—Returns a new connection every time that a con-
	nection is requested. Unlike DBCP’s BasicDataSource, the connections provided
	by DriverManagerDataSource aren’t pooled
	Refer SprinInAction book
 	-->
	
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<!-- For connection pooling use below DBCP 
	It require commons-DBCP jar and commons-pool jar... added to DBCP user lib
	-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	<property name="url" value="jdbc:oracle:thin:@localhost:1521:lucky"/>
	<property name="username" value="lucky_user"/>
	<property name="password" value="lucky_user"/>
	<property name="initialSize" value="5"/>
	<property name="maxActive" value="10"/>
	
	</bean>
	<!-- No need as Annotation defines this in class itself, but need to use <context:component-scan>
	to tell spring to Scans the classpath for annotated components that will be auto-registered as 
	Spring beans
	By default, the Spring-
    provided @Component, @Repository, @Service, and @Controller stereotypes will be detected
	<bean id="jdbcDaoImpl" class="org.lucky.spring.dataSupport.example23addingSpringAndDataSource.dao.JdbcDaoImpl" >
		
	</bean> --> 
</beans>